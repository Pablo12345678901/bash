#!/usr/bin/env bash

source fonctions_personnelles

# Syntaxe
SYNTAXE="$(syntaxe_afficher_si_erreur "$(basename $0)" "-s STRING_AVEC_CHAR_SPECIAUX")"

# Note that we use "$@" to let each command-line parameter expand to a
# separate word. The quotes around "$@" are essential!
# We need TEMP as the 'eval set --' would nuke the return value of getopt.
TEMP=$(getopt --options 's:' -q -- "$@")
# -q : quiet
# -- : marque la fin des options

# Test si la syntaxe a été correcte (options + arguments)
if [ $? -ne 0 ]
then
    STDERR_afficher_message "ERREUR de syntaxe..."
    STDERR_afficher_message "$SYNTAXE"
    exit 1
fi

# Contrôle des arguments
FLAG_OPTION_S=

# Remise des options en paramètres positionnels
eval set -- "$TEMP"
unset TEMP

while true; do
    case "$1" in
	-s )  
	    FLAG_OPTION_S=1
            STRING_AVEC_CHAR_SPECIAUX="$2"
            shift 2
            continue
            ;;
       	'--')
	    shift
	    break
      	    ;;
        * )
	    # Gestion des erreurs pour tout autre bug
            STDERR_afficher_message "ERREUR interne\n"
            STDERR_afficher_message "$SYNTAXE"
            exit 2
            ;;
	esac
done

# Test si les options requises ont été fournies (=test si flag défini)
if [ ! -z "$FLAG_OPTION_S" ]
then
    # Test si d'autres darguments = en trop (=test si $1 défini)
    if [ ! -z "$1" ]
    then
        STDERR_afficher_message "\nERREUR : argument(s) en trop : \"$*\".\n"
        STDERR_afficher_message "$SYNTAXE"
        exit 3
    else
        :
    fi
else
    STDERR_afficher_message "\nERREUR : Vous devez fournir toutes les options requises.\n"
    STDERR_afficher_message "$SYNTAXE"
    exit 4
fi


# Echo du nvo string sans les char spéciaux
echo "$STRING_AVEC_CHAR_SPECIAUX" |
tr 'à' 'a' |
tr 'À' 'A' |
tr 'â' 'a' |
tr 'Â' 'A' |
tr 'ç' 'c' |
tr 'Ç' 'C' |
tr 'é' 'e' |
tr 'É' 'E' |
tr 'è' 'e' |
tr 'È' 'E' |
tr 'ê' 'e' |
tr 'Ê' 'E' |
tr 'î' 'i' |
tr 'Î' 'I' |
tr 'ô' 'o' |
tr 'Ô' 'O' |
tr 'û' 'u' |
tr 'Û' 'U' |
tr '/' '_' |
tr '’' '_' |
tr "'" '_' |
tr '°' '_' |
tr '(' '_' |
tr ')' '_' |
tr '-' '_' |
tr '–' '_' |
tr ' ' '_' |
tr '%' '_'


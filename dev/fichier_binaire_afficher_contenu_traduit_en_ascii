#!/usr/bin/env bash

source fonctions_personnelles


# Syntaxe
SYNTAXE="$(syntaxe_afficher_si_erreur "$(basename $0)" "-f FICHIER_BINAIRE")"

# Note that we use "$@" to let each command-line parameter expand to a
# separate word. The quotes around "$@" are essential!
# We need TEMP as the 'eval set --' would nuke the return value of getopt.
TEMP=$(getopt --options 'f:' -q -- "$@")
# -q : quiet
# -- : marque la fin des options

# Test si la syntaxe a été correcte (options + arguments)
if [ $? -ne 0 ]
then
    STDERR_show_message "ERREUR de syntaxe..."
    STDERR_show_message "$SYNTAXE"
    exit 1
fi

# Contrôle des arguments
FLAG_OPTION_F=

# Remise des options en paramètres positionnels
eval set -- "$TEMP"
unset TEMP

while true; do
    case "$1" in
	-f )  
	    FLAG_OPTION_F=1
            FICHIER_BINAIRE="$2"
	    # Test si fichier
	    if [ ! -f "$FICHIER_BINAIRE" ]
	    then
                STDERR_show_message "ERREUR : \"$FICHIER_BINAIRE\" n'est pas un fichier.\n"
            	STDERR_show_message "$SYNTAXE"
            	exit 2
	    fi
	    # Test si fichier binaire
	    FLAG_BINAIRE="$(file --mime "$FICHIER_BINAIRE" |
	    grep -o '=binary')"
	    if [ -z "$FLAG_BINAIRE" ]
	    then
                STDERR_show_message "ERREUR : \"$FICHIER_BINAIRE\" n'est pas un fichier binaire.\n"
            	STDERR_show_message "$SYNTAXE"
            	exit 2
	    fi
            shift 2
            continue
            ;;
       	'--')
	    shift
	    break
      	    ;;
        * )
	    # Gestion des erreurs pour tout autre bug
            STDERR_show_message "ERREUR interne\n"
            STDERR_show_message "$SYNTAXE"
            exit 2
            ;;
	esac
done

# Test si les options requises ont été fournies (=test si flag défini)
if [ ! -z "$FLAG_OPTION_F" ]
then
    # Test si d'autres darguments = en trop (=test si $1 défini)
    if [ ! -z "$1" ]
    then
        STDERR_show_message "\nERREUR : argument(s) en trop : \"$*\".\n"
        STDERR_show_message "$SYNTAXE"
        exit 3
    else
        :
    fi
else
    STDERR_show_message "\nERREUR : Vous devez fournir toutes les options requises.\n"
    STDERR_show_message "$SYNTAXE"
    exit 4
fi

########## FIN GESTION ARGUMENTS/OPTIONS ####################



# Coeur du script
echo -e "\nContenu du fichier binaire situé \"$FICHIER_BINAIRE\"\n"

xxd -b "$FICHIER_BINAIRE" | # récupération du binaire et de sa traduction
    awk ' { for (i=1; i<=NF; i++) { printf("%s\n",$i) } }' | # affichage de tous les blocs avec des retours à la lignes
    grep -E -v '^[0-9a-f]{8}[:]?$' | # récupération de tous les blocs ne cotnenant pas 8 chiffres et 0-1x ':'
    tr -d '\n' # suppression retour à la ligne


echo -e "\n" # Double retour à la ligne esthétique

#!/usr/bin/env bash

source fonctions_personnelles

# Syntaxe
SYNTAXE="$(syntaxe_afficher_si_erreur "$(basename $0)" "-r REPERTOIRE_GIT" )"

# Contrôle des arguments
FLAG_OPTION_R= # non défini par défaut pr test après lecture des options
while getopts ':r:' OPTION # le résultat de getopts à chaque boucle est stocké dans $OPTION
do
    case $OPTION in
        r )     FLAG_OPTION_R=1
                REPERTOIRE_GIT="$OPTARG"
                # Test si répertoire existe 
                if [ ! -d "$REPERTOIRE_GIT" ]
                then
                    STDERR_afficher_message "\nERREUR : L'argument fourni \"$REPERTOIRE_GIT\" n'est pas un répertoire.\n"
                    STDERR_afficher_message "$SYNTAXE"
                    exit 1
                fi
                # Test si répertoire git
                if [ ! -d "$REPERTOIRE_GIT/.git" ]
                then
                    STDERR_afficher_message "\nERREUR : Le répertoire \"$REPERTOIRE_GIT\" n'est pas un répertoire git.\n"
                    STDERR_afficher_message "$SYNTAXE"
                    exit 2
                fi
                ;;
        # Argument manquant
        \: )    STDERR_afficher_message "\nERREUR : Argument manquant pour l'option -$OPTARG.\n" # les ':'' signifie que la valeur de l'argument n'a pas été trouvée = argument manquant
                STDERR_afficher_message "$SYNTAXE"
                exit 3
                ;;
        # Option inconnue
        \? )    STDERR_afficher_message "ERREUR : Option inconnue : -$OPTARG\n"
                STDERR_afficher_message "$SYNTAXE"
                exit 4
                ;;
    esac
done
shift $(($OPTIND - 1)) # décalage en supprimant les options acquises

# Test si l'option F a été fourni (=test si flag défini)
if [ ! -z "$FLAG_OPTION_R" ]
then
    # Test si d'autres darguments = en trop (=test si $1 défini)
    if [ ! -z "$1" ]
    then
        STDERR_afficher_message "\nERREUR : argument(s) en trop : \"$*\".\n"
        STDERR_afficher_message "$SYNTAXE"
        exit 5 
    else
        :
    fi
else
    STDERR_afficher_message "\nERREUR : Vous devez fournir l'option -r avec son argument.\n"
    STDERR_afficher_message "$SYNTAXE"
    exit 6
fi

# Aller dans le répertoire - fusionner les branches - en sortir
cd "$REPERTOIRE_GIT"
git rev-parse --abbrev-ref HEAD
exit 0

git checkout # THIS_BRANCH
git merge --strategy=ours master    # keep the content of this branch, but record a merge
git checkout master
git merge THIS_BRANCH
cd "$OLDPWD" 
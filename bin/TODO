#!/usr/bin/env bash
echo -e "\nCeci est la liste des choses améliorables pour bash\n"
exit 0
: <<HEREDOCUMENT
La liste ci-dessous n'est pas triée par ordre de priorité :

SCRIPTS
- script qui remplace toutes les occurences d'un pattern dans un/plusieurs fichiers par un autre -> pr développer plus vite si changement nom SCRIPT / FONCTION : cf mes notes / attention à bien afficher la liste des fichiers impactés (et les matchs impacté) avec un choix y/n avant de lancer car très puissant
- script qui met à jour la database sous forme d'un cron (intervalle régulier) incluant tous les fichiers (y.c. Desktop)
- script qui recherche tous les fichiers modifiés depuis X date sur le disque dur externe (sans les répertoire avec '.repertoire') et qui les copie dans un autre disque dur au même chemin avec si nécessaire création des sous-répertoires dans lesquels ils seront - tester à petite échelle avant de lancer en blocs
- Script app_ouvrir : obtenir la liste de toutes les apps disponibles sur le Mac et les proposer sous forme y/n + sélect à la fin de l'ouverture des apps de base
- Script app_ouvrir permettre un argument du nom de l'app à ouvrir que grep recherche dans les apps disponibles sur le Mac puis ouvre (ex : app_ouvrir Chrome)
- Terminal app : Créer un bout de code pour maintenir l'app Terminal disponible = focus dessus en premier plan pendant des tâches qui ouvrent les apps ou gèrent les apps. l'intégrer dans les scripts qui utilisent les apps. Si possible, en faire un script distinct (ex : qui run en arrière plan)
- Dock : Supprimer du dock automatiquement les apps à droite de la barre
- Finaliser le script du decalage des char (cryptage message)
- Historique navigateurs : Créer un script pour supprimer l'historique / cache / tout des navigateur Chrome / Firefox / Safari



DEBUG
- empêcher les apps fermée via la commande app_fermer de se réouvrir automatiquement au redémarrage de l'ordi - c'est génant

APPRENTISSAGE :
- bash - code source : Obtenir le code source de bash pour l'étudier
- Historique Bash : Apprendre à ne pas sauvegarder l'historique des commandes de bash. # cf ce site : https://stackoverflow.com/questions/6475524/how-do-i-prevent-commands-from-showing-up-in-bash-history
- Menu de sélection : Créer un menu de sélection pour des commandes. et pouvoir passer des argument éventuels à ces commandes
- Portabilité slash-antislash : Apprendre comment rendre mes script portables VS les slashs / anti-slash des paths selon l'environnement
- Proposition string : Apprendre à faire une proposition de string à l'utilisateur. Proposition qu'il peut modifier (effacer partiellement / tout) puis valider

OPTIMISATION D'ECRITURE : 
- Fonctions - optimisation : Rassembler les fonctions des fichiers (copier/coller) dans un fichier à part. Puis appeler les fonctions depuis les différents fichiers. Transformer les bouts de code en fonctions génériques pour réutilisation








HEREDOCUMENT
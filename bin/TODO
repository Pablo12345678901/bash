#!/usr/bin/env bash

# Syntaxe :
# - : pas d'argument à fournir
# Ceci est un fichier spécial -> voir le fichier 'README'

echo -e "\nCeci est la liste des choses améliorables pour bash\n"
exit 0

: <<-"HEREDOCUMENT"

Remarques : Les listes ci-dessous ne sont pas forcément triées par ordre de priorité :

####################################################################################################################################################################  

DEVELOPPEMENT

        ##################################################################################
        
        DEBUG
        - remplacement_mot_dans_fichier (les char '|' et '\' suivi de '|' font que certain regex ne sont pas détectés)
                -> si il y a une pipeline sur plusieurs lignes qui se termine par '\' alors cela ne fonctionne pas
                car les lignes réelles sont plusieurs et le script ne détecte qu'une seule ligne -> exemple : recherche regex 'grep' ds le fichier 'fetchurls'
                -> si c'est un regex dans une pipeline sur une seule ligne cela peut aussi bugguer. -> exemple : recherche regex 'grep' ds le fichier 'fetchurls'
        - empêcher les apps fermée via la commande app_fermer de se réouvrir automatiquement au redémarrage de l'ordi - c'est génant
        - script de mise à jour de la DB :
                -> il y a un bug avec 'permission denied' --> cf : https://superuser.com/questions/161183/cannot-manually-update-database-for-locate

        ##################################################################################
        
        CREATION FONCTIONNALITE
        - finaliser le script de création DB : db_creation...
        - transformer les fonctions en fonctions d'affichages - ne plus traiter avec des variables globales
                -> afficher les valeurs et ensuite l'implémentation décide ce qu'elle en fait
                -> exception = fonction de modification de tableau
        - fonction qui test si processus existant basé sur PID
        - fonction qui retourne la ligne correspondant au PID d'un processus :
                -> besoin afficher les lignes qui match puis trier celle dont la colonne = le PID car il peut y avoir le PID ailleurs (PPID, commande)
        - script DEBUG flexible :
                -> récupère variables environnement + affiche valeur + retour à la ligne espacé
                -> récupère variable script + affiche valeur initiale + retour à la ligne
                -> à partir d'une ligne et jusqu'à une autre ligne :
                        -> afficher chaque fois qu'une variable a sa valeur modifiée
                        -> trouver une combine pour les boucle for / while / until
        - script qui recherche tous les fichiers modifiés depuis X date d'un répertoire et les copie ailleurs
                -> sur le disque dur externe (sans les répertoire avec '.repertoire') et qui les copie dans un autre disque dur au même chemin avec si nécessaire création des sous-répertoires dans lesquels ils seront
                -> tester à petite échelle avant de lancer en blocs
        - DB : script qui test si DB existe et retourne 0 ou 1
        - Afficher nb fichiers d'un répertoires
        - Afficher taille d'un répertoire
        - Afficher info générales sur un répertoire en combinant les autres scripts :
                -> nb fichiers, taille, profondeur absolue et relative
        - script qui met à jour la database sous forme d'un cron (intervalle régulier) incluant tous les fichiers (y.c. Desktop)
        - script qui trouve les noms disponibles de plus de X lettres (commençant par XYZ (débuter par 4 ou 5 lettres)) et qui les affiche (inclure le char '_' ) -> renommer mes commandes et gagner en rapidité lors de leur appel
        - Proposition string : Apprendre à faire une proposition de string à l'utilisateur. Proposition qu'il peut modifier (effacer partiellement / tout) puis valider
        - Encrypter les fichiers sensibles de mon disque dur OU trouver un moyen qu'ils soient inaccessible (que par moi et avec MDP)

        ##################################################################################
        
        AMELIORATION SCRIPT EXISTANT
        - remplacement mot ds fichier :
                -> modes silencieux
                ->   accepter les strings de plusieurs mots avec gestion des espaces
                ->   accepter de remplacer un string par un string vide
                ->   faire fonctionner le vidage de la corbeille depuis ce script
        - db_recuperer_data...
                -> Séparer les données par un autre char que '\t'
                -> Fin de ligne par un autre char que '\0'
                -> car sinon si les données contiennent les char '\t' ou '\n' cela bug...
        - emploi :
                -> script d'automatisation de rédaction CV et LM avec les stricts champs à modifier (CV : tire et 4 premiers atouts) (LM : date, nom entreprise, nom destinaire, adresse, date, ....)
                -> conversion du word en PDF (en renommant sans le FR ou EN)
                -> remplissage de l'excel emploi avec les données de l'entreprise (nom / tél / ...)
                -> remplissage du formulaire sur JobRoom (connexion / remplissage)
                -> éventuellement : remplissage du formulaire si postulation via Jobup / via autre site
                -> Éventuels messages d'erreurs si bug (étapes : création répertoire, copie fichiers)
                -> Acceptation de passer en revue plusieurs répertoires pour la même date s'il y a (comportement actuel : un seul répertoire par date avec 'find -quit' )
                -> Si dossier existant, rechercher CV + LM et ouvrir si existant ou rechercher -> copier/coller puis ouvrir sinon
        - app_ouvrir
                -> obtenir la liste de toutes les apps disponibles sur le Mac et les proposer sous forme y/n + sélect à la fin de l'ouverture des apps de base
        - app_ouvrir :
                -> permettre un argument du nom de l'app à ouvrir que grep recherche dans les apps disponibles sur le Mac puis ouvre (ex : app_ouvrir Chrome)
        - Finaliser le script du decalage des char (cryptage message)
        - commandes accélérer en arrière plan :
                -> Accepter plusieurs commandes avec des points virgules (ils font bugguer d'autres commandes perso).
        - pdf_afficher_avec_less :
                -> optimiser la vitesse pour une exécution plus rapide
        - repertoire_recherche_fichier_selon_periode_modification
                -> optimiser la vitesse pour une exécution plus rapide
        - repertoire_recherche_regex
                -> optimiser la vitesse pour une exécution plus rapide

        ##################################################################################

        OPTIMISATION DE FONCTIONNALITES DEJA EXISTANTE
        - Similaire au Finder ms depuis le terminal et avec select : Déplacement dans les répertoires avec sélect qui affiche le contenu à chaque niveau puis : au choix : si choisi fichier -> ouvrir / si choisi répertoire -> s'y rendre / se déplacer dans le répertoire courant (cd) / revenir un niveau en arrière / quitter
        - renommer fichiers : menu select qui les listes -> choix d'un fichier -> donner nvo nom -> renommer -> puis menu select à nouveau
        - Dock : Supprimer du dock automatiquement les apps à droite de la barre
        - Historique navigateurs : Créer un script pour supprimer l'historique / cache / tout des navigateur Chrome / Firefox / Safari

        ##################################################################################

####################################################################################################################################################################        

CONFIGURATION
- me donner l'autorisation de modifier bashrc
- créer et configurer le fichier .inputrc cf section 8 de la documentation bash officielle

####################################################################################################################################################################  

APPRENTISSAGE :
- Historique Bash : Apprendre à ne pas sauvegarder l'historique des commandes de bash. # cf ce site : https://stackoverflow.com/questions/6475524/how-do-i-prevent-commands-from-showing-up-in-bash-history
- Portabilité slash-antislash : Apprendre comment rendre mes script portables VS les slashs / anti-slash des paths selon l'environnement

####################################################################################################################################################################  

HEREDOCUMENT
#!/usr/bin/env bash

source fonctions_personnelles

# Syntaxe
SYNTAXE="$(syntaxe_afficher_si_erreur "$(basename $0)" "-f FICHIER_A_OUVRIR" )"

# Note that we use "$@" to let each command-line parameter expand to a
# separate word. The quotes around "$@" are essential!
# We need TEMP as the 'eval set --' would nuke the return value of getopt.
TEMP=$(getopt -o 'f:' -q -- "$@")
# -o : option courte
# -q : quiet
# -- : marque la fin des options

# Test si la syntaxe a été correcte (options + arguments)
if [ $? -ne 0 ]
then
    STDERR_afficher_message "ERREUR de syntaxe..."
    STDERR_afficher_message "$SYNTAXE"
    exit 1
fi

# Contrôle des arguments
FLAG_OPTION_F= 

# Remise des options en paramètres positionnels
eval set -- "$TEMP"
unset TEMP

while true; do
	case "$1" in
        '-f' )
            FLAG_OPTION_F=1
            FICHIER_A_OUVRIR="$2"
            shift 2
            # Test si le répertoire administratif + tableau de recherche emploi existent
            PATH_FICHIER_A_OUVRIR="${REPERTOIRE_ADMINISTRATIF}/${FICHIER_A_OUVRIR}"
            if [ ! -d "$REPERTOIRE_ADMINISTRATIF" ]
            then
                STDERR_afficher_message "\nERREUR : Le répertoire \"$REPERTOIRE_ADMINISTRATIF\" n'existe pas.\n"
                exit 2
            else
                if [ ! -f "$PATH_FICHIER_A_OUVRIR" ]
                then
                    STDERR_afficher_message "\nERREUR : Le fichier \"$PATH_FICHIER_A_OUVRIR\" n'existe pas.\n"
                    exit 3
                fi
            fi
            continue
            ;;
		'--')
			shift
			break
		    ;;
        # Gestion des erreurs pour tout autre bug.
        * )
            STDERR_afficher_message "ERREUR interne\n"
            STDERR_afficher_message "$SYNTAXE"
            exit 4
            ;;
	esac
done

# Test si les options requises ont été fournies (=test si flag défini)
if [ ! -z "$FLAG_OPTION_F" ] 
then
    # Test si d'autres darguments = en trop (=test si $1 défini)
    if [ ! -z "$1" ]
    then
        STDERR_afficher_message "\nERREUR : argument(s) en trop : \"$*\".\n"
        STDERR_afficher_message "$SYNTAXE"
        exit 5
    else
        :
    fi
else
    STDERR_afficher_message "\nERREUR : Vous devez fournir toutes les options requises.\n"
    STDERR_afficher_message "$SYNTAXE"
    exit 6
fi

# Ouverture du tableau de recherche emploi
echo -e "\nOuverture du fichier \"$FICHIER_A_OUVRIR\"...\n"
{
    echo "DEBUG :  $(basename $0) xdg-open pas au point, veuillez ouvrir manuellement le fichier"
    #xdg-open "$PATH_FICHIER_A_OUVRIR" >/dev/null 2>&1 &&
    #exit 0
} ||
{   STDERR_afficher_message "\nERREUR : le fichier \"$FICHIER_A_OUVRIR\" n'a pas pu être ouvert.\n" &&
    exit 7
} 

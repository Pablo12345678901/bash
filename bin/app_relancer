#!/usr/bin/env bash

# Syntaxe :
# $1 : INDEX_OU_ALL (optionnel) (valeur) (soit l'index du choix de sélect, soit '-all')

source fonctions_personnelles

declare -a TABLEAU_APP_OUVERTES
app_ouvertes_obtention_et_remplissage_tableau TABLEAU_APP_OUVERTES # cf fonction ci-dessus
OPTION_SORTIE="Quitter"
TABLEAU_APP_OUVERTES+=("$OPTION_SORTIE") # ajout option pour quitter
DERNIERE_OPTION=${#TABLEAU_APP_OUVERTES[@]} # Obtention du nombre d'option pour les messages

# Sélection avec possibilité de quitter
CHOIX=""

# Gestion d'un éventuel argument (index+1 passé en argument)
if [ -z "$1" ]
then
    :
else
    INDEX_OU_ALL=$1
    if [[ $INDEX_OU_ALL -gt 0 && $INDEX_OU_ALL -le $DERNIERE_OPTION ]] # si choix compris dans la liste // -gt = greater than // -le = less than or equal to
    then
        index=$(($INDEX_DU_CHOIX-1)) # car les choix sélect débute à 1 et l'index à 0
        CHOIX="${TABLEAU_APP_OUVERTES[$index]}"
    else
        if [ "$INDEX_OU_ALL" == "all" ]
        then
            app_fermer -all || { echo -e "Arrêt du redémarrage des apps sur votre demande.\n" ; exit 1 ; } # cf script
            GESTION_ERREUR=0
            for app in "${TABLEAU_APP_OUVERTES[@]}"
            do
                if [ "$app" != "$OPTION_SORTIE" ]
                then
                    echo "Réouverture de $app..."
                    if [ "$app" == "Electron" ] # Gestion de VS Code qui s'appellent "Electron" à la fermeture et "Visual Studio Code" à l'ouverture
                    then
                        app="Visual Studio Code"
                        code && echo -e "\n$app a été réouverte.\n" || # Spécial pour VS Code car la commande pour ouvrir cette app est spécifique
                        echo -e "\nERREUR : l'application $app n'a pas pu être ouverte.\n" && GESTION_ERREUR=1
                    else
                        open -a "$app" >&2 && echo -e "\n$app a été réouverte.\n" ||
                        echo -e "\nERREUR : l'application $app n'a pas pu être ouverte.\n" && GESTION_ERREUR=1
                    fi
                else
                    : # permet de gérer le choix final pour quitter
                fi
            done
            exit $GESTION_ERREUR # sortie avec ou sans erreur selon ce qu'il s'est passé
        else
            echo -e "\nERREUR : votre saisie \"$INDEX_OU_ALL\" ne fait pas partie de la liste de choix.\nTapez \"$DERNIERE_OPTION\" pour \"$OPTION_SORTIE\""
        fi
    fi
fi

# Boucler tant que le choix n'est pas correct = tant que choix n'est pas un string > 1char
until [ -n "$CHOIX" ] 
do
    echo -e "\nChoisissez une application pour la redémarrer ou tapez \"$DERNIERE_OPTION\" pour \"$OPTION_SORTIE\"\n"
    select CHOIX in "${TABLEAU_APP_OUVERTES[@]}"
    do
        break 
    done
    if [ -n "$CHOIX" ] # si le choix est correct
    then
        :
    else
        echo -e "ERREUR : votre saisie ne fait pas partie de la liste de choix.\nTapez \"$DERNIERE_OPTION\" pour \"$OPTION_SORTIE\""
    fi
done    

# Une fois le choix fait, redémarrage sauf si souhait quitter commande
if [ "$CHOIX" == "$OPTION_SORTIE" ]
then
    echo -e "\nVous avez choisi de \"$CHOIX\" sans rien faire.\n"
    exit 0
else
    # Fermeture de l'app - ne fonctionne pas pour VS Code mais je n'ai pas envie de rendre le code trop lourd en ajoutant le traitement d'app q
    APP_A_FERMER="$CHOIX"
    echo -e "\nFermeture de $APP_A_FERMER..."
    # osascript est spécial et pour Apple - besoin de protéger le nom de l'app entre guillemets
    osascript -e "quit app \"$APP_A_FERMER\"" &&
    echo -e "\n\"$APP_A_FERMER\" a été fermée.\n" ||
    { echo -e "\nERREUR : l'application $APP_A_FERMER n'a pas pu être fermée.\n" && exit 1 ; }
    
    # Fermeture forcée si l'app refuse de fermer
    sleep 3 # met en pause pour X secondes le script pour éviter de trop rapidement obtenir le nom de apps ouvertes qui ne seraient pas encore fermées mais en cours de fermeture
    app_ouvertes_obtention_et_remplissage_tableau TABLEAU_APP_OUVERTES # récupération du nouveau tableau des apps après la tentative de fermeture
    for app in "${TABLEAU_APP_OUVERTES[@]}"
        do
            if [ "$app" == "$APP_A_FERMER" ] # si l'app à fermer ne la pas correctement été
            then # alors fermeture forcée "violente"
                pkill -x $app && echo "$app fermée de manière forcée..." ||
                { echo -e "\nERREUR : l'application $app n'a pas pu être fermée de manière forcée.\n" &&
                exit 1 ; }
            else
                :
            fi
        done
        
    # Réouverture de l'app
    echo "Réouverture de $APP_A_FERMER..."
    if [ "$APP_A_FERMER" == "Electron" ] # Gestion de VS Code qui s'appellent "Electron" à la fermeture et "Visual Studio Code" à l'ouverture
    then
        APP_A_FERMER="Visual Studio Code"
        code && echo -e "\n$APP_A_FERMER a été réouverte.\n" || # Spécial pour VS Code car la commande pour ouvrir cette app est spécifique
        echo -e "\nERREUR : l'application $APP_A_FERMER n'a pas pu être ouverte.\n" && GESTION_ERREUR=1
    else
        open -a "$APP_A_FERMER" >&2 && echo -e "\n$APP_A_FERMER a été réouverte.\n" ||
        echo -e "\nERREUR : l'application $APP_A_FERMER n'a pas pu être ouverte.\n" && GESTION_ERREUR=1
    fi
    exit $GESTION_ERREUR # sortie avec ou sans erreur selon ce qu'il s'est passé
fi


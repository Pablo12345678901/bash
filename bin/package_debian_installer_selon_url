#!/usr/bin/env bash

source fonctions_personnelles

SYNTAXE="$(syntaxe_afficher_si_erreur "$(basename $0)" "-u URL" "[-r REPERTOIRE_TEMPORAIRE]" )"

# Contrôle des arguments
FLAG_OPTION_U= # non défini par défaut pr test après lecture des options
while getopts ':u:' OPTION # le résultat de getopts à chaque boucle est stocké dans $OPTION
do
    case $OPTION in
        u )     FLAG_OPTION_U=1
                URL="$OPTARG"
                # Test si url existe
                if [ $(url_test_si_existe -u "$URL" ) -eq 0 ]
                then
                    :
                else
                    STDERR_afficher_message "\nERREUR : L'url \"$URL\" n'existe pas.\n"
                    STDERR_afficher_message "$SYNTAXE"
                    exit 1
                fi
                ;;
        r )     REPERTOIRE_TEMPORAIRE="$OPTARG"
                # Test si path absolu (commence par slash)
                if [ "${REPERTOIRE_TEMPORAIRE:0:1}" = "/" ]
                then
                    :
                else
                    REPERTOIRE_TEMPORAIRE="${$PWD}/${REPERTOIRE_TEMPORAIRE}"
                fi
                ;;
        # Argument manquant
        \: )    STDERR_afficher_message "\nERREUR : Argument manquant pour l'option -$OPTARG.\n" # les ':'' signifie que la valeur de l'argument n'a pas été trouvée = argument manquant
                STDERR_afficher_message "$SYNTAXE"
                exit 2
                ;;
        # Option inconnue
        \? )    STDERR_afficher_message "ERREUR : Option inconnue : -$OPTARG\n"
                STDERR_afficher_message "$SYNTAXE"
                exit 3
                ;;
    esac
done
shift $(($OPTIND - 1)) # décalage en supprimant les options acquises

# Test si l'option F a été fourni (=test si flag défini)
if [ ! -z "$FLAG_OPTION_U" ]
then
    # Test si d'autres darguments = en trop (=test si $1 défini)
    if [ ! -z "$1" ]
    then
        STDERR_afficher_message "\nERREUR : argument(s) en trop : \"$*\".\n"
        STDERR_afficher_message "$SYNTAXE"
        exit 4 
    else
        :
    fi
else
    STDERR_afficher_message "\nERREUR : Vous devez fournir l'option -u avec son argument.\n"
    STDERR_afficher_message "$SYNTAXE"
    exit 5 
fi

# Si répertoire par défini, assignation à un répertoire temporaire sur le bureau
REPERTOIRE_TEMPORAIRE=${2:-HOME/Bureau/temp2}

# Création du répertoire si non existant
if [ ! -d "$REPERTOIRE_TEMPORAIRE" ]
then
    mkdir "$REPERTOIRE_TEMPORAIRE"
fi

cd "$REPERTOIRE_TEMPORAIRE"
wget "$URL"
PACKAGE="${URL##*/}"
REGEX_EXTENSION_DEB="^.*\.(D|d)(E|e)(B|b)$"

if [[ "$PACKAGE" =~ $REGEX_EXTENSION_DEB ]]
then 
    sudo dpkg -i "$PACKAGE" || {    STDERR_afficher_message "\nERREUR : le fichier \"$PACKAGE\" n'a pas pu être traité correctement.\nVeuillez le faire manuellement.\n" &&
    rm -rf "$PACKAGE" ; # éventuel test de suppression ici
    exit 2 
    }
else
    STDERR_afficher_message "\nERREUR : le fichier \"$PACKAGE\" n'est pas un package avec extension \".deb\".\n"
fi

# Suppression du fichier .deb car plus besoin
rm -rf "$PACKAGE" # éventuel test de suppression ici
# Et du répertoire temporaire
rm -rf "$REPERTOIRE_TEMPORAIRE"
cd "$OLDPWD"
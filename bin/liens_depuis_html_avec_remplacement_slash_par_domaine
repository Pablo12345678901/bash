#!/usr/bin/env bash

source fonctions_personnelles

# Syntaxe
SYNTAXE="$(syntaxe_afficher_si_erreur "$(basename $0)" "-u URL" )"

# Contrôle des arguments
FLAG_OPTION_U= # non défini par défaut pr test après lecture des options
while getopts ':u:' OPTION # le résultat de getopts à chaque boucle est stocké dans $OPTION
do
    case $OPTION in
        u )     FLAG_OPTION_U=1
                URL="$OPTARG"
                # Test si url existe
                if [ $(url_test_si_existe -u "$URL" ) -eq 0 ]
                then
                    :
                else
                    STDERR_afficher_message "\nERREUR : L'url \"$URL\" n'existe pas ou est déviée.\n"
                    STDERR_afficher_message "$SYNTAXE"
                    exit 1
                fi
                ;;
        # Argument manquant
        \: )    STDERR_afficher_message "\nERREUR : Argument manquant pour l'option -$OPTARG.\n" # les ':'' signifie que la valeur de l'argument n'a pas été trouvée = argument manquant
                STDERR_afficher_message "$SYNTAXE"
                exit 2
                ;;
        # Option inconnue
        \? )    STDERR_afficher_message "ERREUR : Option inconnue : -$OPTARG\n"
                STDERR_afficher_message "$SYNTAXE"
                exit 3
                ;;
    esac
done
shift $(($OPTIND - 1)) # décalage en supprimant les options acquises

# Test si l'option F a été fourni (=test si flag défini)
if [ ! -z "$FLAG_OPTION_U" ]
then
    # Test si d'autres darguments = en trop (=test si $1 défini)
    if [ ! -z "$1" ]
    then
        STDERR_afficher_message "\nERREUR : argument(s) en trop : \"$*\".\n"
        STDERR_afficher_message "$SYNTAXE"
        exit 4 
    else
        :
    fi
else
    STDERR_afficher_message "\nERREUR : Vous devez fournir l'option -u avec son argument.\n"
    STDERR_afficher_message "$SYNTAXE"
    exit 5 
fi

# Obtention de l'url jusqu'au domaine
URL_JUSQUAU_DOMAINE="$(url_debut_jusquau_domaine -u "$URL")"

# Remplacement des slashs par anti-slash / slash pour un traitement correct par SED
URL_PR_SED="$(sed_preparation_pr_variable_utilisee_dans_sed_avec_slash_remplacement_en_antislash_slash "$URL_JUSQUAU_DOMAINE" )"

# Remplacement d'un lien débutant par '/' par le début de l'url
liens_de_page_html -u "$URL" | sed -e "s/^\//$URL_PR_SED\//"
#!/usr/bin/env bash

# Syntaxe :
# $1 : REPERTOIRE_DONT_LES_FICHIERS_SERONT_RENDUS_EXECUTABLES (optionnel) (par défaut, mon répertoire bin perso)

# Il m'est possible de fourni un répertoire en argument de ce script.
# Dans ce cas, tous ses fichiers vont (tenté d') être rendu exécutables.

# Gestion d'un éventuel nom de répertoire fourni en argument
# Si fourni, contrôle que bon répertoire
if [ -n "$1" ]
# -n : si un argument a été fourni et longueur string > 0
then
    REPERTOIRE_DONT_LES_FICHIERS_SERONT_RENDUS_EXECUTABLES="$1"
    if [ -d "$REPERTOIRE_DONT_LES_FICHIERS_SERONT_RENDUS_EXECUTABLES" ]
    # -d : si répertoire
    then
        :
    else
        echo "ERREUR : l'argument fourni \"$REPERTOIRE_DONT_LES_FICHIERS_SERONT_RENDUS_EXECUTABLES\" à \"$(basename $0)\" n'est pas un répertoire ou n'existe pas."
        exit 1
    fi
else
    path_des_script_perso="$REPERTOIRE_DEVELOPPEMENT/bash/bin"
fi

# conservation des tableaux pour lister les fichiers selon leur état (déjà exécutables / devenu exécutable / pas pu devenir exécutables )
declare -a liste_fichier_deja_executable
declare -a liste_fichier_executable
declare -a liste_fichier_non_executable

# Gestion des noms de fichiers incluant les éventuels espaces
# Placement de tous les fichiers contenu dans chaque répertoire dans un tableau avec gestion des éventuels espaces dans les noms
readarray -t TABLEAU_FICHIER < <(find "$path_des_script_perso" -type f -print0 | xargs -n 1 -0 -I XxX printf "%s\n" XxX | sort )
# find -s : liste triée
# find ... -type f : fichier (pas répertoires)
# find -print0 : char de fin = nul et pas espace (par défaut)
# xargs -n 1 : 1 argument à la fois
# xargs ... -0 : char séparateur = nul et pas espace (par défaut)
# xargs -J STRING : pr gérer ou sera placé l'argument

# Définition de l'état et essai de rendre exécutable
for SCRIPT in  "${TABLEAU_FICHIER[@]}"
do
    if [ -x "$SCRIPT" ]
    then
        SCRIPT=${SCRIPT##*/}
        liste_fichier_deja_executable+=("$SCRIPT")
    else
        chmod a+x "$SCRIPT" >&2
        if (($?))
        then
            SCRIPT=${SCRIPT##*/}
            liste_fichier_non_executable+=("$SCRIPT")
        else
            SCRIPT=${SCRIPT##*/}
            liste_fichier_executable+=("$SCRIPT")
        fi
    fi
done

#### Affichage des fichiers selon leur état (déjà exécutables / devenu exécutable / pas pu devenir exécutables )

# Déjà exécutable
if (( ${#liste_fichier_deja_executable[@]} ))
then
    echo -e "\nLes fichiers suivants étaient déjà exécutables :\n"
    for SCRIPT_DEJA_EXECUTABLE in "${liste_fichier_deja_executable[@]}"
    do
        echo "$SCRIPT_DEJA_EXECUTABLE"
    done
    echo ""
else
    :
fi

# Devenu exécutable
if (( ${#liste_fichier_executable[@]} ))
then
    echo -e "\nLes fichiers suivants ont été rendus exécutables :\n"
    for SCRIPT_EXECUTABLE in "${liste_fichier_executable[@]}"
    do
        echo "$SCRIPT_EXECUTABLE"
    done
    echo "" 
else
    :
fi

# Pas pu devenir exécutable
if (( ${#liste_fichier_non_executable[@]} ))
then
    echo -e "\nLes fichiers suivants n'ont pas pu être rendus exécutables :\n"
    for SCRIPT_NON_EXECUTABLE in "${liste_fichier_non_executable[@]}"
    do
        echo "$SCRIPT_NON_EXECUTABLE"
    done
    echo ""
else
    :
fi


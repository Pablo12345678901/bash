#!/usr/bin/env bash

# Syntaxe :
# $1 : REPERTOIRE_PARMI_LES_REPERTOIRES_GIT_SANS_LE_PATH_COMPLET (optionnel)
# $2 : MESSAGE_AVEC_LE_GIT_PUSH (optionnel)

source fonctions_personnelles

CHOIX="" # besoin de ce paramètre plus tard pour le message d'affichage final.

# Contrôle des arguments
SYNTAXE="$(syntaxe_afficher_si_erreur "$(basename $0)" "[REPERTOIRE_PARMI_LES_REPERTOIRES_GIT_SANS_LE_PATH_COMPLET]" "[MESSAGE_AVEC_LE_GIT_PUSH]")"
if [ -z "$1" ] # si aucun argument n'est fourni avec la commande, je demande le nom du dossier à push.
then
    # Obtention de la liste des répertoires git potentiellement pushables
    declare -a LISTE_REPERTOIRES_GIT
    OPTION_SORTIE="Annuler le git push"
    for repertoire in $REPERTOIRE_DEVELOPPEMENT/*
    do
        repertoire=${repertoire##*/} # suppression de tout le path sauf la dernière partie
        LISTE_REPERTOIRES_GIT+=("$repertoire")
    done
    LISTE_REPERTOIRES_GIT+=("$OPTION_SORTIE") # ajout de l'option de sortie en fin de liste
    DERNIERE_OPTION=${#LISTE_REPERTOIRES_GIT[@]}

    # Sélection du répertoire à push au sein du répertoire de développement
    until [ -n "$CHOIX" ] # Boucler tant que le choix n'est pas correct = tant que choix n'est pas un string > 1char
    do
        echo -e "\nChoisissez le répertoire git à push :\n"
        select CHOIX in "${LISTE_REPERTOIRES_GIT[@]}"
        do
            echo "$CHOIX"
            break 
        done
        if [ -n "$CHOIX" ]
        then
            if [ "$CHOIX" != "$OPTION_SORTIE" ]
            then
                echo -e "\nVous avez choisi de push le répertoire git \"$CHOIX\".\n"
                REPERTOIRE_GIT_A_PUSH="$REPERTOIRE_DEVELOPPEMENT/$CHOIX"
            else
                echo -e "\nVous avez choisi d'annuler le git push.\n"
                exit 0
            fi
        else
            echo -e "ERREUR : votre saisie ne fait pas partie de la liste de choix.\nTapez \"$DERNIERE_OPTION\" pour \"$OPTION_SORTIE\""
        fi
    done
else
    REPERTOIRE_PARMI_LES_REPERTOIRES_GIT_SANS_LE_PATH_COMPLET="$1"
    CHOIX="$REPERTOIRE_PARMI_LES_REPERTOIRES_GIT_SANS_LE_PATH_COMPLET" # Pour le message final uniquement
    REPERTOIRE_GIT_A_PUSH="$REPERTOIRE_DEVELOPPEMENT/${REPERTOIRE_PARMI_LES_REPERTOIRES_GIT_SANS_LE_PATH_COMPLET}"
    if [ -d "$REPERTOIRE_GIT_A_PUSH" ]
    then
        :
    else
        echo -e "\nERREUR : le premier argument :\n\"$REPERTOIRE_PARMI_LES_REPERTOIRES_GIT_SANS_LE_PATH_COMPLET\"\nn'est pas un répertoire ou ne fait pas partie du répertoire \"developpement\" personnel."
        echo -e "$SYNTAXE"
        exit 1
    fi
fi

# Aller dans le répertoire fourni
cd $REPERTOIRE_GIT_A_PUSH

# Spécificité avec le répertoire Bash avec Git qui ne push pas le script car il le run.
if [ $PWD == "$REPERTOIRE_DEVELOPPEMENT/bash" ] # Uniquement pour mon répertoire Git Bash
then
    git add "$0" # comme je run ce fichier "$0" il semblerait que Git ne le prenne pas d'office.
    #DEBUG echo "Rép bash" # DEBUG
else
    :
fi

# Push du git
{   git add . &&
    git status &&
    MESSAGE_AVEC_LE_GIT_PUSH="$2" &&
    while [ ${#MESSAGE_AVEC_LE_GIT_PUSH} -eq 0 ]
    do
        read -rp "Quelle message voudriez-vous joindre avec le push ? " MESSAGE_AVEC_LE_GIT_PUSH
        # -r : ne permet pas au barre oblique de se comporter comme des char spéciaux
        if [ ${#MESSAGE_AVEC_LE_GIT_PUSH} -eq 0 ]
        then
            echo -e "\nERREUR : Veuillez saisir un message d'au moins 1 char.\n"
        fi
    done &&
    git commit -m "$MESSAGE_AVEC_LE_GIT_PUSH" &&
    git push  && echo -e "\nCommit du répertoire \"$CHOIX\" = OK\n" &&
    cd "$OLDPWD" &&
    exit 0
} ||
{ echo -e "\nLe commit du répertoire \"$CHOIX\" n'a pas pu être correctement fait OU il n'y avait rien à push."
  cd "$OLDPWD"
  exit 1
}

